{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["initialItems","content","id","shuffle","array","sort","Math","random","getItems","count","removed","splice","console","log","Object","keys","pop","Array","from","reorder","list","startIndex","endIndex","result","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","background","color","minWidth","flexGrow","flexBasis","maxWidth","getListStyle","isDraggingOver","display","flexWrap","minHeight","App","state","p1","p2","change","submit","bag","trash","p1Turn","p2Turn","id2List","droppableP1","droppableP2","droppableChange","droppableSubmit","getList","onSubmitChange","items","numberOfChange","length","bagItemsClone","newItemFromBag","destinationState","setState","onSubmitConfirm","sourceState","onDragEnd","resultList","this","className","ExpansionPanel","expanded","onChange","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","style","flexDirection","direction","provided","snapshot","ref","innerRef","map","item","key","draggableId","Card","draggableProps","dragHandleProps","CardContent","Typography","variant","component","placeholder","Button","marginLeft","disabled","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5dac9fe.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nlet initialItems = [\n    {content: '0', id: 'item-1'},\n    {content: '0', id: 'item-2'},\n    {content: '0', id: 'item-3'},\n    {content: '0', id: 'item-4'},\n    {content: '0', id: 'item-5'},\n    {content: '1', id: 'item-6'},\n    {content: '1', id: 'item-7'},\n    {content: '1', id: 'item-8'},\n    {content: '1', id: 'item-9'},\n    {content: '1', id: 'item-10'},\n    {content: '1', id: 'item-11'},\n    {content: '2', id: 'item-12'},\n    {content: '2', id: 'item-13'},\n    {content: '2', id: 'item-14'},\n    {content: '2', id: 'item-15'},\n    {content: '2', id: 'item-16'},\n    {content: '2', id: 'item-17'},\n    {content: '3', id: 'item-18'},\n    {content: '3', id: 'item-19'},\n    {content: '3', id: 'item-20'},\n    {content: '3', id: 'item-21'},\n    {content: '3', id: 'item-22'},\n    {content: '4', id: 'item-23'},\n    {content: '4', id: 'item-24'},\n    {content: '4', id: 'item-25'},\n    {content: '4', id: 'item-26'},\n    {content: '4', id: 'item-27'},\n    {content: '5', id: 'item-28'},\n    {content: '5', id: 'item-29'},\n    {content: '5', id: 'item-30'},\n    {content: '5', id: 'item-31'},\n    {content: '6', id: 'item-32'},\n    {content: '6', id: 'item-33'},\n    {content: '6', id: 'item-34'},\n    {content: '6', id: 'item-35'},\n    {content: '7', id: 'item-36'},\n    {content: '7', id: 'item-37'},\n    {content: '7', id: 'item-38'},\n    {content: '7', id: 'item-39'},\n    {content: '8', id: 'item-40'},\n    {content: '8', id: 'item-41'},\n    {content: '8', id: 'item-42'},\n    {content: '8', id: 'item-43'},\n    {content: '9', id: 'item-44'},\n    {content: '9', id: 'item-45'},\n    {content: '9', id: 'item-46'},\n    {content: '9', id: 'item-47'},\n    {content: '10', id: 'item-48'},\n    {content: '10', id: 'item-49'},\n    {content: '11', id: 'item-50'},\n    {content: '12', id: 'item-51'},\n    {content: '12', id: 'item-52'},\n    {content: '13', id: 'item-53'},\n    {content: '14', id: 'item-54'},\n    {content: '15', id: 'item-55'},\n    {content: '16', id: 'item-56'},\n    {content: '17', id: 'item-57'},\n    {content: '18', id: 'item-58'},\n    {content: '19', id: 'item-59'},\n    {content: '20', id: 'item-60'},\n    {content: '+', id: 'item-61'},\n    {content: '+', id: 'item-62'},\n    {content: '+', id: 'item-63'},\n    {content: '+', id: 'item-64'},\n    {content: '-', id: 'item-65'},\n    {content: '-', id: 'item-66'},\n    {content: '-', id: 'item-67'},\n    {content: '-', id: 'item-68'},\n    {content: '+/-', id: 'item-69'},\n    {content: '+/-', id: 'item-70'},\n    {content: '+/-', id: 'item-71'},\n    {content: '+/-', id: 'item-72'},\n    {content: 'x', id: 'item-73'},\n    {content: 'x', id: 'item-74'},\n    {content: 'x', id: 'item-75'},\n    {content: 'x', id: 'item-76'},\n    {content: '÷', id: 'item-77'},\n    {content: '÷', id: 'item-78'},\n    {content: '÷', id: 'item-79'},\n    {content: '÷', id: 'item-80'},\n    {content: 'x/÷', id: 'item-81'},\n    {content: 'x/÷', id: 'item-82'},\n    {content: 'x/÷', id: 'item-83'},\n    {content: 'x/÷', id: 'item-84'},\n    {content: '?', id: 'item-85'},\n    {content: '?', id: 'item-86'},\n    {content: '?', id: 'item-87'},\n    {content: '?', id: 'item-88'},\n    {content: '=', id: 'item-89'},\n    {content: '=', id: 'item-90'},\n    {content: '=', id: 'item-91'},\n    {content: '=', id: 'item-92'},\n    {content: '=', id: 'item-93'},\n    {content: '=', id: 'item-94'},\n    {content: '=', id: 'item-95'},\n    {content: '=', id: 'item-96'},\n    {content: '=', id: 'item-97'},\n    {content: '=', id: 'item-98'},\n    {content: '=', id: 'item-99'},\n    {content: '=', id: 'item-100'},\n]\n\nfunction shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n}\n\n// fake data generator\nconst getItems = (count = 0) => {\n    shuffle(initialItems)\n    const removed = initialItems.splice(0, count)\n    console.log(Object.keys({removed}).pop(), removed)\n    return Array.from(removed)\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the p1 look a bit nicer\n    userSelect: \"none\",\n    padding: grid / 2,\n    margin: `${grid}px ${grid}px 0 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"#424242\",\n    color: \"white\",\n    minWidth: 64,\n    flexGrow: 1,\n    flexBasis: 0,\n    maxWidth: 96,\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    display: \"flex\",\n    padding: grid,\n    flexWrap: \"wrap\",\n    minHeight: 64,\n});\n\nconst getButtonStyle = () => ({\n    padding: grid * 2,\n    margin: grid,\n    marginLeft: 0,\n    minWidth: 128,\n    display: \"flex\"\n})\n\nclass App extends Component {\n    state = {\n        p1: [],\n        p2: [],\n        change: [],\n        submit: [],\n        bag: [],\n        trash: [],\n        p1Turn: false,\n        p2Turn: false,\n    };\n\n    /**\n     * A semi-generic way to handle multiple lists. Matches\n     * the IDs of the droppable container to the names of the\n     * source arrays stored in the state.\n     */\n    id2List = {\n        droppableP1: 'p1',\n        droppableP2: 'p2',\n        droppableChange: 'change',\n        droppableSubmit: 'submit',\n    };\n\n    componentDidMount() {\n        this.setState(\n            {\n                p1: getItems(8),\n                p2: getItems(8),\n                submit: [],\n                bag: getItems(84),\n                p1Turn: false,\n                p2Turn: false,\n            }\n        )\n    }\n\n\n    getList = id => this.state[this.id2List[id]];\n\n    onSubmitChange = (items, destination) => {\n        const numberOfChange = items.length\n\n        const bagItemsClone = Array.from(this.state.bag);\n        shuffle(bagItemsClone)\n\n        const newItemFromBag = bagItemsClone.splice(0, numberOfChange)\n        const destinationState = this.state[this.id2List[destination.droppableId]]\n\n        this.setState({\n            [this.id2List[destination.droppableId]]: [...destinationState, ...newItemFromBag],\n            bag: [...bagItemsClone, ...items],\n            change: []\n        });\n    }\n\n    onSubmitConfirm = (items, source) => {\n        const numberOfChange = items.length\n\n        const bagItemsClone = Array.from(this.state.bag);\n        shuffle(bagItemsClone)\n\n        const newItemFromBag = bagItemsClone.splice(0, numberOfChange)\n        const sourceState = this.state[this.id2List[source.droppableId]]\n\n        this.setState({\n            [this.id2List[source.droppableId]]: [...sourceState, ...newItemFromBag],\n            bag: [...bagItemsClone],\n            trash: [...this.state.trash, items],\n            submit: []\n        });\n    }\n\n    onDragEnd = result => {\n        const {source, destination} = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const resultList = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n\n            this.setState({[this.id2List[source.droppableId]]: resultList});\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                [this.id2List[source.droppableId]]: result[source.droppableId],\n                [this.id2List[destination.droppableId]]: result[destination.droppableId],\n            });\n        }\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    render() {\n        return (\n            <div className=\"App\" id=\"App\">\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <ExpansionPanel expanded={this.state.p1Turn}\n                                    onChange={() => this.setState({p1Turn: !this.state.p1Turn})}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                        >\n                            <h2>ผู้เล่น 1</h2>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <Droppable droppableId=\"droppableP1\" direction=\"horizontal\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        style={\n                                            getListStyle(snapshot.isDraggingOver)\n                                        }>\n                                        {this.state.p1.map((item, index) => (\n                                            <Draggable\n                                                key={item.id}\n                                                draggableId={item.id}\n                                                index={index}>\n                                                {(provided, snapshot) => (\n                                                    <Card\n                                                        ref={provided.innerRef}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}\n                                                        style={getItemStyle(\n                                                            snapshot.isDragging,\n                                                            provided.draggableProps.style\n                                                        )}>\n                                                        <CardContent>\n                                                            <Typography variant=\"h3\" component=\"h4\">\n                                                                {item.content}\n                                                            </Typography>\n                                                        </CardContent>\n                                                    </Card>\n                                                )}\n                                            </Draggable>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            <div style={{display: \"flex\"}}>\n\n                                <Button\n                                    style={getButtonStyle()}\n                                    disabled={this.state.change.length === 0 || this.state.submit.length > 0 || this.state.p1.length === 8 || this.state.bag.length === 0}\n                                    variant=\"contained\" color=\"primary\"\n                                    onClick={() => {\n                                        this.onSubmitChange(this.state.change, {droppableId: \"droppableP1\"})\n                                        this.setState({p1Turn: false, p2Turn: true})\n                                    }}>\n\n                                    <Typography variant=\"h5\" component=\"h6\">\n                                        เปลี่ยน </Typography>\n                                </Button>\n                                <Button\n                                    style={getButtonStyle()}\n                                    disabled={this.state.submit.length === 0 || this.state.change.length > 0 || (this.state.p1.length === 8 && this.state.bag.length !== 0)}\n                                    variant=\"contained\" color=\"secondary\"\n                                    onClick={() => {\n                                        this.onSubmitConfirm(this.state.submit, {droppableId: \"droppableP1\"})\n                                        this.setState({p1Turn: false, p2Turn: true})\n                                    }}>\n                                    <Typography variant=\"h5\" component=\"h6\">\n                                        ลง </Typography> </Button>\n                            </div>\n                        </ExpansionPanelDetails>\n\n                    </ExpansionPanel>\n\n                    <h2>ใส่เบี้ยที่จะเปลี่ยนที่นี่</h2>\n                    <Droppable droppableId=\"droppableChange\" direction=\"horizontal\">\n                        {(provided, snapshot) => (\n                            <div\n                                ref={provided.innerRef}\n                                style={\n                                    getListStyle(snapshot.isDraggingOver)\n                                }>\n                                {this.state.change.map((item, index) => (\n                                    <Draggable\n                                        key={item.id}\n                                        draggableId={item.id}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <Card\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}>\n                                                <CardContent>\n                                                    <Typography variant=\"h3\" component=\"h4\">\n                                                        {item.content}\n                                                    </Typography> </CardContent>\n                                            </Card>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                    <h2>ใส่เบี้ยที่จะลงที่นี่</h2>\n                    <Droppable droppableId=\"droppableSubmit\" direction=\"horizontal\">\n                        {(provided, snapshot) => (\n                            <div\n                                ref={provided.innerRef}\n                                style={\n                                    getListStyle(snapshot.isDraggingOver)\n                                }>\n                                {this.state.submit.map((item, index) => (\n                                    <Draggable\n                                        key={item.id}\n                                        draggableId={item.id}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <Card\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}>\n                                                <CardContent>\n                                                    <Typography variant=\"h3\" component=\"h4\">\n                                                        {item.content}\n                                                    </Typography> </CardContent>\n                                            </Card>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                    <ExpansionPanel expanded={this.state.p2Turn}\n                                    onChange={() => this.setState({p2Turn: !this.state.p2Turn})}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}>\n                            <h2>ผู้เล่น 2</h2>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <Droppable droppableId=\"droppableP2\" direction=\"horizontal\">\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        style={\n                                            getListStyle(snapshot.isDraggingOver)\n                                        }>\n                                        {this.state.p2.map((item, index) => (\n                                            <Draggable\n                                                key={item.id}\n                                                draggableId={item.id}\n                                                index={index}>\n                                                {(provided, snapshot) => (\n                                                    <Card\n                                                        ref={provided.innerRef}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}\n                                                        style={getItemStyle(\n                                                            snapshot.isDragging,\n                                                            provided.draggableProps.style\n                                                        )}>\n                                                        <CardContent>\n                                                            <Typography variant=\"h3\" component=\"h4\">\n                                                                {item.content}\n                                                            </Typography> </CardContent>\n                                                    </Card>\n                                                )}\n                                            </Draggable>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                            <div style={{display: \"flex\"}}>\n                                <Button\n                                    style={getButtonStyle()}\n                                    disabled={this.state.change.length === 0 || this.state.submit.length > 0 || this.state.p2.length === 8 || this.state.bag.length === 0}\n                                    variant=\"contained\" color=\"primary\"\n                                    onClick={() => {\n                                        this.onSubmitChange(this.state.change, {droppableId: \"droppableP2\"})\n                                        this.setState({p1Turn: true, p2Turn: false})\n                                    }}>\n                                    <Typography variant=\"h5\" component=\"h6\">\n                                        เปลี่ยน </Typography>\n                                </Button>\n                                <Button\n                                    style={getButtonStyle()}\n                                    disabled={this.state.submit.length === 0 || this.state.change.length > 0 || (this.state.p2.length === 8 && this.state.bag.length !== 0)}\n                                    variant=\"contained\" color=\"secondary\"\n                                    onClick={() => {\n                                        this.onSubmitConfirm(this.state.submit, {droppableId: \"droppableP2\"})\n                                        this.setState({p1Turn: true, p2Turn: false})\n                                    }}>\n                                    <Typography variant=\"h5\" component=\"h6\">\n                                        ลง </Typography>\n                                </Button></div>\n                        </ExpansionPanelDetails>\n\n                    </ExpansionPanel>\n\n                </DragDropContext>\n                <div id=\"bag\">\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon/>}\n                        >\n                            <h2>เบี้ยในถุง</h2>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            {this.state.bag.map((item, index) => (<span id={index}>{item.content}</span>))}\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}