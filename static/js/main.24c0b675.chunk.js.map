{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["initialItems","content","id","isNumberContent","test","shuffle","array","sort","Math","random","getItems","count","removed","splice","Array","from","reorder","list","startIndex","endIndex","result","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","background","color","minWidth","flexGrow","flexBasis","maxWidth","minHeight","display","justifyContent","alignItems","getListStyle","isDraggingOver","flexWrap","App","state","p1","p2","p1Bucket","p2Bucket","change","submit","bag","trash","p1Turn","p2Turn","snapshot","id2List","droppableP1","droppableP2","droppableP1Bucket","droppableP2Bucket","droppableChange","droppableSubmit","updateSnapshot","cloned","JSON","parse","stringify","setState","retrieveSnapshot","length","shift","getList","onSubmitChange","items","origin","numberOfChange","bagItemsClone","newItemFromBag","destinationState","onSubmitConfirm","sourceState","onDragEnd","resultList","this","className","style","fontFamily","ExpansionPanel","expanded","onChange","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","flexDirection","direction","provided","ref","innerRef","map","item","key","draggableId","Card","draggableProps","dragHandleProps","Typography","variant","component","placeholder","Button","marginLeft","disabled","onClick","navigator","clipboard","writeText","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"obAYIA,EAAe,CACjB,CAAEC,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,UACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,KAAMC,GAAI,WACrB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,MAAOC,GAAI,WACtB,CAAED,QAAS,MAAOC,GAAI,WACtB,CAAED,QAAS,MAAOC,GAAI,WACtB,CAAED,QAAS,MAAOC,GAAI,WACtB,CAAED,QAAS,MAAOC,GAAI,WACtB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,OAAKC,GAAI,WACpB,CAAED,QAAS,OAAKC,GAAI,WACpB,CAAED,QAAS,OAAKC,GAAI,WACpB,CAAED,QAAS,OAAKC,GAAI,WACpB,CAAED,QAAS,SAAOC,GAAI,WACtB,CAAED,QAAS,SAAOC,GAAI,WACtB,CAAED,QAAS,SAAOC,GAAI,WACtB,CAAED,QAAS,SAAOC,GAAI,WACtB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,WACpB,CAAED,QAAS,IAAKC,GAAI,aAGtB,SAASC,EAAgBF,GACvB,MAAO,aAAaG,KAAKH,GAG3B,SAASI,EAAQC,GACfA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,MAInC,IAAMC,EAAW,WAAgB,IAAfC,EAAc,uDAAN,EACxBN,EAAQL,GACR,IAAMY,EAAUZ,EAAaa,OAAO,EAAGF,GAEvC,OAAOG,MAAMC,KAAKH,IAIdI,EAAU,SAACC,EAAMC,EAAYC,GACjC,IAAMC,EAASN,MAAMC,KAAKE,GADoB,EAE5BG,EAAOP,OAAOK,EAAY,GAArCN,EAFuC,oBAK9C,OAFAQ,EAAOP,OAAOM,EAAU,EAAGP,GAEpBQ,GAMHC,EAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAClD,IAAMC,EAAcZ,MAAMC,KAAKO,GACzBK,EAAYb,MAAMC,KAAKQ,GAF8C,EAGzDG,EAAYb,OAAOW,EAAgBI,MAAO,GAArDhB,EAHoE,oBAK3Ee,EAAUd,OAAOY,EAAqBG,MAAO,EAAGhB,GAEhD,IAAMQ,EAAS,GAIf,OAHAA,EAAOI,EAAgBK,aAAeH,EACtCN,EAAOK,EAAqBI,aAAeF,EAEpCP,GAKHU,EAAe,SAACC,EAAYC,GAAb,oBAEnBC,WAAY,OACZC,QAASC,EACTC,OAAO,GAAD,OAAKD,EAAL,cAAmBA,EAAnB,UAGNE,WAAYN,EAAa,aAAe,UACxCO,MAAO,QACPC,SAAU,GACVC,SAAU,EACVC,UAAW,EACXC,SAAU,GACVC,UAAW,GACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAETd,IAGCe,EAAe,SAAAC,GAAc,MAAK,CACtCX,WAAYW,EAAiB,YAAc,YAC3CJ,QAAS,OACTV,QA1BW,EA2BXe,SAAU,OACVN,UAAW,KAoiBEO,E,4MAxhBbC,MAAQ,CACNC,GAAI,GACJC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRC,OAAQ,GACRC,IAAK,GACLC,MAAO,GACPC,QAAQ,EACRC,QAAQ,EACRC,SAAU,I,EAQZC,QAAU,CACRC,YAAa,KACbC,YAAa,KACbC,kBAAmB,WACnBC,kBAAmB,WACnBC,gBAAiB,SACjBC,gBAAiB,U,EAiBnBC,eAAiB,WACf,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKvB,QAC9C,EAAKwB,SAAS,CAAEb,SAAU,CAACS,M,EAG7BK,iBAAmB,WACkB,IAA/B,EAAKzB,MAAMW,SAASe,QAGxB,EAAKF,SAAL,eAAmB,EAAKxB,MAAMW,SAASgB,W,EAGzCC,QAAU,SAAA7E,GAAE,OAAI,EAAKiD,MAAM,EAAKY,QAAQ7D,K,EAExC8E,eAAiB,SAACC,EAAO1D,EAAa2D,GAAY,IAAD,EAC/C,EAAKZ,iBACL,IAAMa,EAAiBF,EAAMJ,OAEvBO,EAAgBtE,MAAMC,KAAK,EAAKoC,MAAMO,KAC5CrD,EAAQ+E,GAER,IAAMC,EAAiBD,EAAcvE,OAAO,EAAGsE,GACzCG,EAAmB,EAAKnC,MAAM,EAAKY,QAAQxC,EAAYM,cAE7D,EAAK8C,UAAL,mBACG,EAAKZ,QAAQxC,EAAYM,aAD5B,sBAEOyD,GAFP,YAGOD,KAHP,0CAKWD,GALX,YAK6BH,KAL7B,uBAMU,IANV,cAOG,EAAKlB,QAAQmB,EAAOrD,aAAe,IAPtC,K,EAWF0D,gBAAkB,SAACN,EAAO3D,EAAQ4D,GAAY,IAAD,EAC3C,EAAKZ,iBACL,IAAMa,EAAiBF,EAAMJ,OAEvBO,EAAgBtE,MAAMC,KAAK,EAAKoC,MAAMO,KAC5CrD,EAAQ+E,GAER,IAAMC,EAAiBD,EAAcvE,OAAO,EAAGsE,GACzCK,EAAc,EAAKrC,MAAM,EAAKY,QAAQzC,EAAOO,cAEnD,EAAK8C,UAAL,mBACG,EAAKZ,QAAQzC,EAAOO,aADvB,sBAC0C2D,GAD1C,YAC0DH,KAD1D,gCAEWD,IAFX,4CAGa,EAAKjC,MAAMQ,OAHxB,CAG+BsB,KAH/B,uBAIU,IAJV,cAKG,EAAKlB,QAAQmB,EAAOrD,aAAe,IALtC,K,EASF4D,UAAY,SAAArE,GAAW,IACbE,EAAwBF,EAAxBE,OAAQC,EAAgBH,EAAhBG,YAGhB,GAAKA,EAIL,GAAID,EAAOO,cAAgBN,EAAYM,YAAa,CAClD,IAAM6D,EAAa1E,EACjB,EAAK+D,QAAQzD,EAAOO,aACpBP,EAAOM,MACPL,EAAYK,OAGd,EAAK+C,SAAL,eAAiB,EAAKZ,QAAQzC,EAAOO,aAAe6D,QAC/C,CAAC,IAAD,EACCtE,EAASC,EACb,EAAK0D,QAAQzD,EAAOO,aACpB,EAAKkD,QAAQxD,EAAYM,aACzBP,EACAC,GAGF,EAAKoD,UAAL,mBACG,EAAKZ,QAAQzC,EAAOO,aAAeT,EAAOE,EAAOO,cADpD,cAEG,EAAKkC,QAAQxC,EAAYM,aAAeT,EAAOG,EAAYM,cAF9D,M,kEA3FF8D,KAAKhB,SAAS,CACZvB,GAAI1C,EAAS,GACb2C,GAAI3C,EAAS,GACb4C,SAAU,GACVC,SAAU,GACVE,OAAQ,GACRC,IAAKhD,EAAS,IACdkD,QAAQ,EACRC,QAAQ,EACRC,SAAU,O,+BA2FJ,IAAD,OACP,OACE,yBACE8B,UAAU,MACV1F,GAAG,MACH2F,MAAO,CAAEC,WAAY,WAAYxD,MAAO,SAExC,kBAAC,IAAD,CAAiBmD,UAAWE,KAAKF,WAC/B,kBAACM,EAAA,EAAD,CACEC,SAAUL,KAAKxC,MAAMS,OACrBqC,SAAU,kBAAM,EAAKtB,SAAS,CAAEf,QAAS,EAAKT,MAAMS,WAEpD,kBAACsC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,6EAEDR,KAAKxC,MAAMS,QACV,kBAACwC,EAAA,EAAD,CACEP,MAAO,CAAEjD,QAAS,OAAQyD,cAAe,WAEzC,kBAAC,IAAD,CAAWxE,YAAY,cAAcyE,UAAU,eAC5C,SAACC,EAAUzC,GAAX,OACC,yBACE0C,IAAKD,EAASE,SACdZ,MAAO9C,EAAae,EAASd,iBAE5B,EAAKG,MAAMC,GAAGsD,KAAI,SAACC,EAAM/E,GAAP,OACjB,kBAAC,IAAD,CACEgF,IAAKD,EAAKzG,GACV2G,YAAaF,EAAKzG,GAClB0B,MAAOA,IAEN,SAAC2E,EAAUzC,GAAX,OACC,kBAACgD,EAAA,EAAD,eACEN,IAAKD,EAASE,UACVF,EAASQ,eACTR,EAASS,gBAHf,CAIEnB,MAAO/D,EACLgC,EAAS/B,WACTwE,EAASQ,eAAelB,SAG1B,kBAACoB,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAEpBa,EAAK1G,gBAMfsG,EAASa,gBAIhB,yBAAKvB,MAAO,CAAEjD,QAAS,SACrB,kBAACyE,EAAA,EAAD,CACExB,MApMU,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QAgMS2E,SACiC,IAA/B5B,KAAKxC,MAAMG,SAASuB,QACK,IAAzBc,KAAKxC,MAAMC,GAAGyB,QACY,IAA1Bc,KAAKxC,MAAMO,IAAImB,OAEjBqC,QAAQ,YACR5E,MAAM,UACNkF,QAAS,WACP,EAAKxC,eACH,EAAK7B,MAAMG,SACX,CACEzB,YAAa,eAEf,CACEA,YAAa,wBAMnB,kBAACoF,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,6CAKU,MAGZ,kBAACuB,EAAA,EAAD,CACExB,MAlOU,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QA8NS2E,SACiC,IAA/B5B,KAAKxC,MAAMG,SAASuB,QACM,IAAzBc,KAAKxC,MAAMC,GAAGyB,QACa,IAA1Bc,KAAKxC,MAAMO,IAAImB,OAEnBqC,QAAQ,YACR5E,MAAM,YACNkF,QAAS,WACP,EAAKjC,gBACH,EAAKpC,MAAMG,SACX,CACEzB,YAAa,eAEf,CACEA,YAAa,wBAMnB,kBAACoF,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,eAKK,KACS,KAEhB,kBAACuB,EAAA,EAAD,CACExB,MAAK,eAhQK,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QA2Pc,CAAyB0E,WAAY,KAC1CJ,QAAQ,YACR5E,MAAM,UACNiF,SAAyC,IAA/B5B,KAAKxC,MAAMG,SAASuB,OAC9B2C,QAAS,WACPC,UAAUC,UAAUC,UAClB,EAAKxE,MAAMG,SACRoD,KAAI,SAAAC,GAAI,OACPxG,EAAgBwG,EAAK1G,SACjB0G,EAAK1G,QADT,YAES0G,EAAK1G,QAFd,SAID2H,KAAK,SAIZ,kBAACX,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,OAKO,OAIX,kBAAC,IAAD,CACEjE,YAAY,oBACZyE,UAAU,eAET,SAACC,EAAUzC,GAAX,OACC,yBACE0C,IAAKD,EAASE,SACdZ,MAAO9C,EAAae,EAASd,iBAE5B,EAAKG,MAAMG,SAASoD,KAAI,SAACC,EAAM/E,GAAP,OACvB,kBAAC,IAAD,CACEgF,IAAKD,EAAKzG,GACV2G,YAAaF,EAAKzG,GAClB0B,MAAOA,IAEN,SAAC2E,EAAUzC,GAAX,OACC,kBAACgD,EAAA,EAAD,eACEN,IAAKD,EAASE,UACVF,EAASQ,eACTR,EAASS,gBAHf,CAIEnB,MAAO/D,EACLgC,EAAS/B,WACTwE,EAASQ,eAAelB,SAG1B,kBAACoB,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAEpBa,EAAK1G,gBAMfsG,EAASa,kBAOtB,kBAACH,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,yGAKuBH,KAAKxC,MAAMO,IAAImB,OALtC,wBAOA,kBAACwC,EAAA,EAAD,CACExB,MA5UkB,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QAwUC2E,SAAyC,IAA/B5B,KAAKxC,MAAMW,SAASe,OAC9BqC,QAAQ,YACR5E,MAAM,UACNkF,QAAS,WACP,EAAK5C,qBAGP,kBAACqC,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,OAKO,MAIT,kBAACC,EAAA,EAAD,CACEC,SAAUL,KAAKxC,MAAMU,OACrBoC,SAAU,kBAAM,EAAKtB,SAAS,CAAEd,QAAS,EAAKV,MAAMU,WAEpD,kBAACqC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,6EAEDR,KAAKxC,MAAMU,QACV,kBAACuC,EAAA,EAAD,CACEP,MAAO,CAAEjD,QAAS,OAAQyD,cAAe,WAEzC,kBAAC,IAAD,CAAWxE,YAAY,cAAcyE,UAAU,eAC5C,SAACC,EAAUzC,GAAX,OACC,yBACE0C,IAAKD,EAASE,SACdZ,MAAO9C,EAAae,EAASd,iBAE5B,EAAKG,MAAME,GAAGqD,KAAI,SAACC,EAAM/E,GAAP,OACjB,kBAAC,IAAD,CACEgF,IAAKD,EAAKzG,GACV2G,YAAaF,EAAKzG,GAClB0B,MAAOA,IAEN,SAAC2E,EAAUzC,GAAX,OACC,kBAACgD,EAAA,EAAD,eACEN,IAAKD,EAASE,UACVF,EAASQ,eACTR,EAASS,gBAHf,CAIEnB,MAAO/D,EACLgC,EAAS/B,WACTwE,EAASQ,eAAelB,SAG1B,kBAACoB,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAEpBa,EAAK1G,gBAMfsG,EAASa,gBAIhB,yBAAKvB,MAAO,CAAEjD,QAAS,SACrB,kBAACyE,EAAA,EAAD,CACExB,MA/YU,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QA2YS2E,SACiC,IAA/B5B,KAAKxC,MAAMI,SAASsB,QACK,IAAzBc,KAAKxC,MAAME,GAAGwB,QACY,IAA1Bc,KAAKxC,MAAMO,IAAImB,OAEjBqC,QAAQ,YACR5E,MAAM,UACNkF,QAAS,WACP,EAAKxC,eACH,EAAK7B,MAAMI,SACX,CACE1B,YAAa,eAEf,CACEA,YAAa,wBAMnB,kBAACoF,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,6CAKU,MAGZ,kBAACuB,EAAA,EAAD,CACExB,MA7aU,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QAyaS2E,SACiC,IAA/B5B,KAAKxC,MAAMI,SAASsB,QACM,IAAzBc,KAAKxC,MAAME,GAAGwB,QACa,IAA1Bc,KAAKxC,MAAMO,IAAImB,OAEnBqC,QAAQ,YACR5E,MAAM,YACNkF,QAAS,WACP,EAAKjC,gBACH,EAAKpC,MAAMI,SACX,CACE1B,YAAa,eAEf,CACEA,YAAa,wBAMnB,kBAACoF,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,eAKK,MAGP,kBAACuB,EAAA,EAAD,CACExB,MAAK,eA3cK,CAC5B3D,QAASC,GACTC,OAjCW,EAkCXkF,WAAY,EACZ/E,SAAU,IACVK,QAAS,QAscc,CAAyB0E,WAAY,KAC1CJ,QAAQ,YACR5E,MAAM,UACNiF,SAAyC,IAA/B5B,KAAKxC,MAAMI,SAASsB,OAC9B2C,QAAS,WACPC,UAAUC,UAAUC,UAClB,EAAKxE,MAAMI,SACRmD,KAAI,SAAAC,GAAI,OACPxG,EAAgBwG,EAAK1G,SACjB0G,EAAK1G,QADT,YAES0G,EAAK1G,QAFd,SAID2H,KAAK,SAIZ,kBAACX,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAHvB,OAKO,OAIX,kBAAC,IAAD,CACEjE,YAAY,oBACZyE,UAAU,eAET,SAACC,EAAUzC,GAAX,OACC,yBACE0C,IAAKD,EAASE,SACdZ,MAAO9C,EAAae,EAASd,iBAE5B,EAAKG,MAAMI,SAASmD,KAAI,SAACC,EAAM/E,GAAP,OACvB,kBAAC,IAAD,CACEgF,IAAKD,EAAKzG,GACV2G,YAAaF,EAAKzG,GAClB0B,MAAOA,IAEN,SAAC2E,EAAUzC,GAAX,OACC,kBAACgD,EAAA,EAAD,eACEN,IAAKD,EAASE,UACVF,EAASQ,eACTR,EAASS,gBAHf,CAIEnB,MAAO/D,EACLgC,EAAS/B,WACTwE,EAASQ,eAAelB,SAG1B,kBAACoB,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVtB,MAAO,CAAEC,WAAY,aAEpBa,EAAK1G,gBAMfsG,EAASa,mBAQxB,yBAAKlH,GAAG,OACN,kBAAC6F,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,6FAEF,kBAACC,EAAA,EAAD,KACGT,KAAKxC,MAAMO,IAAIgD,KAAI,SAAAC,GAAI,OACtB,0BAAMC,IAAKD,EAAKzG,IAAKyG,EAAK1G,oB,GA/gBxB4H,aCxLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBd,WACrBA,UAAUe,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.24c0b675.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport \"./App.css\";\nimport \"./font.css\";\nimport Button from \"@material-ui/core/Button\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\nlet initialItems = [\n  { content: \"0\", id: \"item-1\" },\n  { content: \"0\", id: \"item-2\" },\n  { content: \"0\", id: \"item-3\" },\n  { content: \"0\", id: \"item-4\" },\n  { content: \"0\", id: \"item-5\" },\n  { content: \"1\", id: \"item-6\" },\n  { content: \"1\", id: \"item-7\" },\n  { content: \"1\", id: \"item-8\" },\n  { content: \"1\", id: \"item-9\" },\n  { content: \"1\", id: \"item-10\" },\n  { content: \"1\", id: \"item-11\" },\n  { content: \"2\", id: \"item-12\" },\n  { content: \"2\", id: \"item-13\" },\n  { content: \"2\", id: \"item-14\" },\n  { content: \"2\", id: \"item-15\" },\n  { content: \"2\", id: \"item-16\" },\n  { content: \"2\", id: \"item-17\" },\n  { content: \"3\", id: \"item-18\" },\n  { content: \"3\", id: \"item-19\" },\n  { content: \"3\", id: \"item-20\" },\n  { content: \"3\", id: \"item-21\" },\n  { content: \"3\", id: \"item-22\" },\n  { content: \"4\", id: \"item-23\" },\n  { content: \"4\", id: \"item-24\" },\n  { content: \"4\", id: \"item-25\" },\n  { content: \"4\", id: \"item-26\" },\n  { content: \"4\", id: \"item-27\" },\n  { content: \"5\", id: \"item-28\" },\n  { content: \"5\", id: \"item-29\" },\n  { content: \"5\", id: \"item-30\" },\n  { content: \"5\", id: \"item-31\" },\n  { content: \"6\", id: \"item-32\" },\n  { content: \"6\", id: \"item-33\" },\n  { content: \"6\", id: \"item-34\" },\n  { content: \"6\", id: \"item-35\" },\n  { content: \"7\", id: \"item-36\" },\n  { content: \"7\", id: \"item-37\" },\n  { content: \"7\", id: \"item-38\" },\n  { content: \"7\", id: \"item-39\" },\n  { content: \"8\", id: \"item-40\" },\n  { content: \"8\", id: \"item-41\" },\n  { content: \"8\", id: \"item-42\" },\n  { content: \"8\", id: \"item-43\" },\n  { content: \"9\", id: \"item-44\" },\n  { content: \"9\", id: \"item-45\" },\n  { content: \"9\", id: \"item-46\" },\n  { content: \"9\", id: \"item-47\" },\n  { content: \"10\", id: \"item-48\" },\n  { content: \"10\", id: \"item-49\" },\n  { content: \"11\", id: \"item-50\" },\n  { content: \"12\", id: \"item-51\" },\n  { content: \"12\", id: \"item-52\" },\n  { content: \"13\", id: \"item-53\" },\n  { content: \"14\", id: \"item-54\" },\n  { content: \"15\", id: \"item-55\" },\n  { content: \"16\", id: \"item-56\" },\n  { content: \"17\", id: \"item-57\" },\n  { content: \"18\", id: \"item-58\" },\n  { content: \"19\", id: \"item-59\" },\n  { content: \"20\", id: \"item-60\" },\n  { content: \"+\", id: \"item-61\" },\n  { content: \"+\", id: \"item-62\" },\n  { content: \"+\", id: \"item-63\" },\n  { content: \"+\", id: \"item-64\" },\n  { content: \"-\", id: \"item-65\" },\n  { content: \"-\", id: \"item-66\" },\n  { content: \"-\", id: \"item-67\" },\n  { content: \"-\", id: \"item-68\" },\n  { content: \"+/-\", id: \"item-69\" },\n  { content: \"+/-\", id: \"item-70\" },\n  { content: \"+/-\", id: \"item-71\" },\n  { content: \"+/-\", id: \"item-72\" },\n  { content: \"+/-\", id: \"item-89\" },\n  { content: \"x\", id: \"item-73\" },\n  { content: \"x\", id: \"item-74\" },\n  { content: \"x\", id: \"item-75\" },\n  { content: \"x\", id: \"item-76\" },\n  { content: \"÷\", id: \"item-77\" },\n  { content: \"÷\", id: \"item-78\" },\n  { content: \"÷\", id: \"item-79\" },\n  { content: \"÷\", id: \"item-80\" },\n  { content: \"x/÷\", id: \"item-81\" },\n  { content: \"x/÷\", id: \"item-82\" },\n  { content: \"x/÷\", id: \"item-83\" },\n  { content: \"x/÷\", id: \"item-84\" },\n  { content: \"?\", id: \"item-85\" },\n  { content: \"?\", id: \"item-86\" },\n  { content: \"?\", id: \"item-87\" },\n  { content: \"?\", id: \"item-88\" },\n  { content: \"=\", id: \"item-90\" },\n  { content: \"=\", id: \"item-91\" },\n  { content: \"=\", id: \"item-92\" },\n  { content: \"=\", id: \"item-93\" },\n  { content: \"=\", id: \"item-94\" },\n  { content: \"=\", id: \"item-95\" },\n  { content: \"=\", id: \"item-96\" },\n  { content: \"=\", id: \"item-97\" },\n  { content: \"=\", id: \"item-98\" },\n  { content: \"=\", id: \"item-99\" },\n  { content: \"=\", id: \"item-100\" }\n];\n\nfunction isNumberContent(content) {\n  return /^([0-9]+)$/.test(content);\n}\n\nfunction shuffle(array) {\n  array.sort(() => Math.random() - 0.5);\n}\n\n// fake data generator\nconst getItems = (count = 0) => {\n  shuffle(initialItems);\n  const removed = initialItems.splice(0, count);\n  // console.log(Object.keys({ removed }).pop(), removed);\n  return Array.from(removed);\n};\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the p1 look a bit nicer\n  userSelect: \"none\",\n  padding: grid / 4,\n  margin: `${grid / 2}px ${grid / 2}px 0 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"#424242\",\n  color: \"white\",\n  minWidth: 64,\n  flexGrow: 1,\n  flexBasis: 0,\n  maxWidth: 96,\n  minHeight: 64,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  display: \"flex\",\n  padding: grid,\n  flexWrap: \"wrap\",\n  minHeight: 64\n});\n\nconst getButtonStyle = () => ({\n  padding: grid * 2,\n  margin: grid,\n  marginLeft: 0,\n  minWidth: 128,\n  display: \"flex\"\n});\n\nclass App extends Component {\n  state = {\n    p1: [],\n    p2: [],\n    p1Bucket: [],\n    p2Bucket: [],\n    change: [],\n    submit: [],\n    bag: [],\n    trash: [],\n    p1Turn: false,\n    p2Turn: false,\n    snapshot: []\n  };\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  id2List = {\n    droppableP1: \"p1\",\n    droppableP2: \"p2\",\n    droppableP1Bucket: \"p1Bucket\",\n    droppableP2Bucket: \"p2Bucket\",\n    droppableChange: \"change\",\n    droppableSubmit: \"submit\"\n  };\n\n  componentDidMount() {\n    this.setState({\n      p1: getItems(8),\n      p2: getItems(8),\n      p1Bucket: [],\n      p2Bucket: [],\n      submit: [],\n      bag: getItems(84),\n      p1Turn: true,\n      p2Turn: true,\n      snapshot: []\n    });\n  }\n\n  updateSnapshot = () => {\n    const cloned = JSON.parse(JSON.stringify(this.state));\n    this.setState({ snapshot: [cloned] });\n  };\n\n  retrieveSnapshot = () => {\n    if (this.state.snapshot.length === 0) {\n      return;\n    }\n    this.setState({ ...this.state.snapshot.shift() });\n  };\n\n  getList = id => this.state[this.id2List[id]];\n\n  onSubmitChange = (items, destination, origin) => {\n    this.updateSnapshot();\n    const numberOfChange = items.length;\n\n    const bagItemsClone = Array.from(this.state.bag);\n    shuffle(bagItemsClone);\n\n    const newItemFromBag = bagItemsClone.splice(0, numberOfChange);\n    const destinationState = this.state[this.id2List[destination.droppableId]];\n\n    this.setState({\n      [this.id2List[destination.droppableId]]: [\n        ...destinationState,\n        ...newItemFromBag\n      ],\n      bag: [...bagItemsClone, ...items],\n      change: [],\n      [this.id2List[origin.droppableId]]: []\n    });\n  };\n\n  onSubmitConfirm = (items, source, origin) => {\n    this.updateSnapshot();\n    const numberOfChange = items.length;\n\n    const bagItemsClone = Array.from(this.state.bag);\n    shuffle(bagItemsClone);\n\n    const newItemFromBag = bagItemsClone.splice(0, numberOfChange);\n    const sourceState = this.state[this.id2List[source.droppableId]];\n\n    this.setState({\n      [this.id2List[source.droppableId]]: [...sourceState, ...newItemFromBag],\n      bag: [...bagItemsClone],\n      trash: [...this.state.trash, items],\n      submit: [],\n      [this.id2List[origin.droppableId]]: []\n    });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const resultList = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      this.setState({ [this.id2List[source.droppableId]]: resultList });\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        [this.id2List[source.droppableId]]: result[source.droppableId],\n        [this.id2List[destination.droppableId]]: result[destination.droppableId]\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <div\n        className=\"App\"\n        id=\"App\"\n        style={{ fontFamily: \"Sriracha\", color: \"#333\" }}\n      >\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <ExpansionPanel\n            expanded={this.state.p1Turn}\n            onChange={() => this.setState({ p1Turn: !this.state.p1Turn })}\n          >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <h2>ผู้เล่น 1</h2>\n            </ExpansionPanelSummary>\n            {this.state.p1Turn && (\n              <ExpansionPanelDetails\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Droppable droppableId=\"droppableP1\" direction=\"horizontal\">\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                      {this.state.p1.map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <Card\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Typography\n                                variant=\"h3\"\n                                component=\"h4\"\n                                style={{ fontFamily: \"Sriracha\" }}\n                              >\n                                {item.content}\n                              </Typography>\n                            </Card>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n                <div style={{ display: \"flex\" }}>\n                  <Button\n                    style={getButtonStyle()}\n                    disabled={\n                      this.state.p1Bucket.length === 0 ||\n                      this.state.p1.length === 8 ||\n                      this.state.bag.length === 0\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      this.onSubmitChange(\n                        this.state.p1Bucket,\n                        {\n                          droppableId: \"droppableP1\"\n                        },\n                        {\n                          droppableId: \"droppableP1Bucket\"\n                        }\n                      );\n                      // this.setState({ p1Turn: false, p2Turn: true });\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      เปลี่ยน{\" \"}\n                    </Typography>\n                  </Button>\n                  <Button\n                    style={getButtonStyle()}\n                    disabled={\n                      this.state.p1Bucket.length === 0 ||\n                      (this.state.p1.length === 8 &&\n                        this.state.bag.length !== 0)\n                    }\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      this.onSubmitConfirm(\n                        this.state.p1Bucket,\n                        {\n                          droppableId: \"droppableP1\"\n                        },\n                        {\n                          droppableId: \"droppableP1Bucket\"\n                        }\n                      );\n                      // this.setState({ p1Turn: false, p2Turn: true });\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      ลง{\" \"}\n                    </Typography>{\" \"}\n                  </Button>\n                  <Button\n                    style={{ ...getButtonStyle(), marginLeft: 16 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={this.state.p1Bucket.length === 0}\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.p1Bucket\n                          .map(item =>\n                            isNumberContent(item.content)\n                              ? item.content\n                              : `\"(${item.content})\"`\n                          )\n                          .join(\"\\t\")\n                      );\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      Copy{\" \"}\n                    </Typography>\n                  </Button>\n                </div>\n                <Droppable\n                  droppableId=\"droppableP1Bucket\"\n                  direction=\"horizontal\"\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                      {this.state.p1Bucket.map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <Card\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Typography\n                                variant=\"h3\"\n                                component=\"h4\"\n                                style={{ fontFamily: \"Sriracha\" }}\n                              >\n                                {item.content}\n                              </Typography>\n                            </Card>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </ExpansionPanelDetails>\n            )}\n          </ExpansionPanel>\n          <Typography\n            variant=\"h5\"\n            component=\"h6\"\n            style={{ fontFamily: \"Sriracha\" }}\n          >\n            เบี้ยในถุงเหลือ{`: ${this.state.bag.length} ตัว`}\n          </Typography>\n          <Button\n            style={getButtonStyle()}\n            disabled={this.state.snapshot.length === 0}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              this.retrieveSnapshot();\n            }}\n          >\n            <Typography\n              variant=\"h5\"\n              component=\"h6\"\n              style={{ fontFamily: \"Sriracha\" }}\n            >\n              Back{\" \"}\n            </Typography>\n          </Button>\n\n          <ExpansionPanel\n            expanded={this.state.p2Turn}\n            onChange={() => this.setState({ p2Turn: !this.state.p2Turn })}\n          >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <h2>ผู้เล่น 2</h2>\n            </ExpansionPanelSummary>\n            {this.state.p2Turn && (\n              <ExpansionPanelDetails\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Droppable droppableId=\"droppableP2\" direction=\"horizontal\">\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                      {this.state.p2.map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <Card\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Typography\n                                variant=\"h3\"\n                                component=\"h4\"\n                                style={{ fontFamily: \"Sriracha\" }}\n                              >\n                                {item.content}\n                              </Typography>\n                            </Card>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n                <div style={{ display: \"flex\" }}>\n                  <Button\n                    style={getButtonStyle()}\n                    disabled={\n                      this.state.p2Bucket.length === 0 ||\n                      this.state.p2.length === 8 ||\n                      this.state.bag.length === 0\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      this.onSubmitChange(\n                        this.state.p2Bucket,\n                        {\n                          droppableId: \"droppableP2\"\n                        },\n                        {\n                          droppableId: \"droppableP2Bucket\"\n                        }\n                      );\n                      // this.setState({ p1Turn: true, p2Turn: false });\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      เปลี่ยน{\" \"}\n                    </Typography>\n                  </Button>\n                  <Button\n                    style={getButtonStyle()}\n                    disabled={\n                      this.state.p2Bucket.length === 0 ||\n                      (this.state.p2.length === 8 &&\n                        this.state.bag.length !== 0)\n                    }\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      this.onSubmitConfirm(\n                        this.state.p2Bucket,\n                        {\n                          droppableId: \"droppableP2\"\n                        },\n                        {\n                          droppableId: \"droppableP2Bucket\"\n                        }\n                      );\n                      // this.setState({ p1Turn: true, p2Turn: false });\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      ลง{\" \"}\n                    </Typography>\n                  </Button>\n                  <Button\n                    style={{ ...getButtonStyle(), marginLeft: 16 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={this.state.p2Bucket.length === 0}\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.p2Bucket\n                          .map(item =>\n                            isNumberContent(item.content)\n                              ? item.content\n                              : `\"(${item.content})\"`\n                          )\n                          .join(\"\\t\")\n                      );\n                    }}\n                  >\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h6\"\n                      style={{ fontFamily: \"Sriracha\" }}\n                    >\n                      Copy{\" \"}\n                    </Typography>\n                  </Button>\n                </div>\n                <Droppable\n                  droppableId=\"droppableP2Bucket\"\n                  direction=\"horizontal\"\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={getListStyle(snapshot.isDraggingOver)}\n                    >\n                      {this.state.p2Bucket.map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <Card\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Typography\n                                variant=\"h3\"\n                                component=\"h4\"\n                                style={{ fontFamily: \"Sriracha\" }}\n                              >\n                                {item.content}\n                              </Typography>\n                            </Card>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </ExpansionPanelDetails>\n            )}\n          </ExpansionPanel>\n        </DragDropContext>\n        <div id=\"bag\">\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <h2>เบี้ยในถุง</h2>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              {this.state.bag.map(item => (\n                <span key={item.id}>{item.content}</span>\n              ))}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}